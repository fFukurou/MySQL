USE book_shop;

-- --------------------------------- COUNT --------------------------------

SELECT COUNT(*) FROM BOOKS;
SELECT COUNT(author_fname) FROM BOOKS; -- ONE AUTHOR_FNAME IS NULL
SELECT COUNT(DISTINCT RELEASED_YEAR) FROM BOOKS; -- DISTINCT WORKS!

SELECT COUNT(*) FROM BOOKS WHERE title LIKE '%the%';


-- --------------------------------- GROUP BY --------------------------------

SELECT author_lname, COUNT(*) AS books_written FROM BOOKS GROUP BY author_lname;
SELECT RELEASED_YEAR, COUNT(*) FROM BOOKS GROUP BY RELEASED_YEAR;

-- --------------------------------- MIN MAXING (xd) --------------------------------

SELECT MIN(RELEASED_YEAR) FROM BOOKS; 
SELECT MAX(PAGES) FROM BOOKS;
SELECT MIN(AUTHOR_LNAME), MAX(AUTHOR_LNAME) FROM BOOKS;

-- --------------------------------- SUBQUERIES --------------------------------

SELECT title, pages FROM BOOKS WHERE PAGES = (SELECT MAX(PAGES) FROM BOOKS);
-- INSERT INTO books (title, pages) VALUES ('My Life Sucks', 634);
SELECT TITLE, RELEASED_YEAR FROM BOOKS WHERE RELEASED_YEAR = (SELECT MIN(RELEASED_YEAR) FROM BOOKS);

-- --------------------------------- GROUP BY MULTIPLE COLUMNS --------------------------------

SELECT AUTHOR_FNAME, AUTHOR_LNAME, COUNT(*) FROM BOOKS
GROUP BY AUTHOR_LNAME, AUTHOR_FNAME;

SELECT CONCAT(AUTHOR_FNAME, ' ', AUTHOR_LNAME) AS author_name, COUNT(*) FROM BOOKS
GROUP BY author_name;

-- --------------------------------- MIN AND MAX WITH GROUP BY --------------------------------

SELECT CONCAT(AUTHOR_FNAME, ' ', AUTHOR_LNAME) AS author_name, COUNT(*) AS books_written ,MIN(RELEASED_YEAR) AS earliest_release,
MAX(RELEASED_YEAR) AS latest_release, MAX(PAGES) AS longest_page_count
FROM BOOKS GROUP BY author_name;

-- --------------------------------- SUM --------------------------------

SELECT SUM(PAGES) FROM BOOKS;
SELECT AUTHOR_LNAME, SUM(PAGES) FROM BOOKS GROUP BY AUTHOR_LNAME;
SELECT AUTHOR_LNAME, COUNT(*), SUM(RELEASED_YEAR) FROM BOOKS GROUP BY AUTHOR_LNAME;
SELECT SUM(AUTHOR_FNAME) FROM BOOKS; -- UNSURPRISINGLY, DOESN'T WORK WITH STRINGS (SHOCKED EMOTE)

-- --------------------------------- AVG --------------------------------

SELECT AVG(RELEASED_YEAR) FROM BOOKS;
SELECT AVG(PAGES) FROM BOOKS;
SELECT AVG(STOCK_QUANTITY) FROM BOOKS;

SELECT released_year, AVG(STOCK_QUANTITY), COUNT(*) FROM BOOKS
GROUP BY RELEASED_YEAR ORDER BY AVG(STOCK_QUANTITY);

-- --------------------------------- EXERCISES --------------------------------

-- PRINT THE NUMBER OF BOOKS IN THE DATABASE
SELECT COUNT(*) FROM BOOKS;

-- PRINT OUT HOW MANY BOOKS WERE RELEASED IN EACH YEAR
SELECT RELEASED_YEAR, COUNT(*) FROM BOOKS GROUP BY RELEASED_YEAR;

-- PRINT TOTAL AMOUNT OF BOOKS IN STOCK
SELECT SUM(STOCK_QUANTITY) FROM BOOKS;

-- FIND THE AVARAGE RELEAESD_YEAR FOR REACH AUTHOR
SELECT CONCAT(AUTHOR_FNAME, ' ', AUTHOR_LNAME) AS AUTHOR, AVG(RELEASED_YEAR) FROM BOOKS
GROUP BY AUTHOR;

-- FIND THE FULL NAME OF THE AUTHOR WHO WROTE THE LONGEST BOOK
SELECT CONCAT(AUTHOR_FNAME, ' ', AUTHOR_LNAME) AS AUTHOR, PAGES FROM BOOKS
WHERE PAGES = (SELECT MAX(PAGES) FROM BOOKS);

-- EACH RELEASE YEAR, HOW MANY BOOKS RELEASED IN THAT YEAR, AND THE AVERAGE NUMBER OF PAGES IN THOSE BOOKS
SELECT RELEASED_YEAR AS year, COUNT(*) AS '# books', AVG(PAGES) AS 'avg pages' FROM BOOKS 
GROUP BY RELEASED_YEAR ORDER BY RELEASED_YEAR; 



commit;